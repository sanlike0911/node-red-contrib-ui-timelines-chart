[
    {
        "id": "299de46f.fed57c",
        "type": "tab",
        "label": "fllow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "491c9326bcc39059",
        "type": "group",
        "z": "299de46f.fed57c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a139a777.1c72f8",
            "b123d4bb.967e08",
            "acf55e6a.5eebd",
            "7f5e9c62.03fd64",
            "4c554da1.775324",
            "28e6ce38.b125f2",
            "d6480b66.212d38",
            "349a939e.2441fc",
            "36a1bb954d1be862",
            "7d8a882c438c1cb9",
            "9ca8de59a4d3c560",
            "ad848f5f31111f27",
            "f6fe68bfc979dde5",
            "3cb7a90fdbdaa7f5",
            "7cd973f172520fec"
        ],
        "x": 54,
        "y": 39,
        "w": 1392,
        "h": 428
    },
    {
        "id": "7cd973f172520fec",
        "type": "group",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c453449a.2a34a8",
            "bff180da7ef4c770",
            "cec323ebfe42f717",
            "4b4b8bc35b733b9d",
            "76596c9d7b35f7fa",
            "8cb4b6dcb483f9fd"
        ],
        "x": 354,
        "y": 79,
        "w": 512,
        "h": 362
    },
    {
        "id": "a139a777.1c72f8",
        "type": "inject",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "c453449a.2a34a8"
            ]
        ]
    },
    {
        "id": "c453449a.2a34a8",
        "type": "template",
        "z": "299de46f.fed57c",
        "g": "7cd973f172520fec",
        "name": "make chart data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"dataItems\":[\n      {\n          \"group\": \"\",\n          \"data\": [\n              {\n                  \"label\": \"\",\n                  \"data\": [\n                      {\n                          \"timeRange\": [\n                              \"2020-12-31T08:00:00+09:00\",\n                              \"2020-12-31T09:10:00+09:00\"\n                          ],\n                          \"val\": \"1\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2020-12-31T09:10:00+09:00\",\n                              \"2020-12-31T12:00:00+09:00\"\n                          ],\n                          \"val\": \"2\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2020-12-31T12:00:00+09:00\",\n                              \"2020-12-31T12:10:00+09:00\"\n                          ],\n                          \"val\": \"3\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2020-12-31T12:10:00+09:00\",\n                              \"2020-12-31T12:20:00+09:00\"\n                          ],\n                          \"val\": \"4\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2020-12-31T12:20:00+09:00\",\n                              \"2020-12-31T12:30:00+09:00\"\n                          ],\n                          \"val\": \"5\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2020-12-31T12:30:00+09:00\",\n                              \"2020-12-31T22:00:00+09:00\"\n                          ],\n                          \"val\": \"6\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:00:00+09:00\",\n                              \"2021-01-01T00:10:00+09:00\"\n                          ],\n                          \"val\": \"1\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:10:00+09:00\",\n                              \"2021-01-01T00:20:00+09:00\"\n                          ],\n                          \"val\": \"2\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:20:00+09:00\",\n                              \"2021-01-01T00:40:00+09:00\"\n                          ],\n                          \"val\": \"3\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:00+09:00\",\n                              \"2021-01-01T00:40:01+09:00\"\n                          ],\n                          \"val\": \"4\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:01+09:00\",\n                              \"2021-01-01T00:40:02+09:00\"\n                          ],\n                          \"val\": \"5\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:02+09:00\",\n                              \"2021-01-01T00:40:03+09:00\"\n                          ],\n                          \"val\": \"6\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:04+09:00\",\n                              \"2021-01-01T00:40:05+09:00\"\n                          ],\n                          \"val\": \"7\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:05+09:00\",\n                              \"2021-01-01T00:40:10+09:00\"\n                          ],\n                          \"val\": \"8\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:10+09:00\",\n                              \"2021-01-01T00:40:15+09:00\"\n                          ],\n                          \"val\": \"9\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:15+09:00\",\n                              \"2021-01-01T00:40:30+09:00\"\n                          ],\n                          \"val\": \"10\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T00:40:30+09:00\",\n                              \"2021-01-01T01:00:00+09:00\"\n                          ],\n                          \"val\": \"11\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T01:00:00+09:00\",\n                              \"2021-01-01T01:10:00+09:00\"\n                          ],\n                          \"val\": \"12\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T01:10:00+09:00\",\n                              \"2021-01-01T01:30:00+09:00\"\n                          ],\n                          \"val\": \"13\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T01:30:00+09:00\",\n                              \"2021-01-01T02:00:00+09:00\"\n                          ],\n                          \"val\": \"14\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T02:00:00+09:00\",\n                              \"2021-01-01T03:00:00+09:00\"\n                          ],\n                          \"val\": \"15\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T03:00:00+09:00\",\n                              \"2021-01-01T04:00:00+09:00\"\n                          ],\n                          \"val\": \"16\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T04:00:00+09:00\",\n                              \"2021-01-01T05:00:00+09:00\"\n                          ],\n                          \"val\": \"17\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T05:00:00+09:00\",\n                              \"2021-01-01T06:00:00+09:00\"\n                          ],\n                          \"val\": \"18\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T06:00:00+09:00\",\n                              \"2021-01-01T07:00:00+09:00\"\n                          ],\n                          \"val\": \"19\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T07:00:00+09:00\",\n                              \"2021-01-01T08:00:00+09:00\"\n                          ],\n                          \"val\": \"20\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T08:00:00+09:00\",\n                              \"2021-01-01T09:00:00+09:00\"\n                          ],\n                          \"val\": \"21\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T09:00:00+09:00\",\n                              \"2021-01-01T10:00:00+09:00\"\n                          ],\n                          \"val\": \"22\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T10:00:00+09:00\",\n                              \"2021-01-01T11:00:00+09:00\"\n                          ],\n                          \"val\": \"15\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T11:00:00+09:00\",\n                              \"2021-01-01T12:00:00+09:00\"\n                          ],\n                          \"val\": \"16\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T12:00:00+09:00\",\n                              \"2021-01-01T13:00:00+09:00\"\n                          ],\n                          \"val\": \"17\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T13:00:00+09:00\",\n                              \"2021-01-01T14:00:00+09:00\"\n                          ],\n                          \"val\": \"18\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T14:00:00+09:00\",\n                              \"2021-01-01T15:00:00+09:00\"\n                          ],\n                          \"val\": \"19\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T15:00:00+09:00\",\n                              \"2021-01-01T16:00:00+09:00\"\n                          ],\n                          \"val\": \"20\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T17:00:00+09:00\",\n                              \"2021-01-01T18:00:00+09:00\"\n                          ],\n                          \"val\": \"21\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T19:00:00+09:00\",\n                              \"2021-01-01T20:00:00+09:00\"\n                          ],\n                          \"val\": \"22\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T20:00:00+09:00\",\n                              \"2021-01-01T21:00:00+09:00\"\n                          ],\n                          \"val\": \"23\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:00:00+09:00\",\n                              \"2021-01-01T22:10:00+09:00\"\n                          ],\n                          \"val\": \"24\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:10:00+09:00\",\n                              \"2021-01-01T22:20:00+09:00\"\n                          ],\n                          \"val\": \"25\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:20:00+09:00\",\n                              \"2021-01-01T22:30:00+09:00\"\n                          ],\n                          \"val\": \"26\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:30:00+09:00\",\n                              \"2021-01-01T22:31:00+09:00\"\n                          ],\n                          \"val\": \"27\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:31:00+09:00\",\n                              \"2021-01-01T22:35:00+09:00\"\n                          ],\n                          \"val\": \"28\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:35:00+09:00\",\n                              \"2021-01-01T22:40:00+09:00\"\n                          ],\n                          \"val\": \"29\"\n                      },\n                      {\n                          \"timeRange\": [\n                              \"2021-01-01T22:40:00+09:00\",\n                              \"2021-01-02T23:59:59+09:00\"\n                          ],\n                          \"val\": \"30\"\n                      }\n                  ]\n              }\n          ]\n      }\n    ]\n}",
        "output": "json",
        "x": 460,
        "y": 240,
        "wires": [
            [
                "f6fe68bfc979dde5"
            ]
        ]
    },
    {
        "id": "b123d4bb.967e08",
        "type": "debug",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 240,
        "wires": []
    },
    {
        "id": "acf55e6a.5eebd",
        "type": "inject",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "cec323ebfe42f717"
            ]
        ]
    },
    {
        "id": "7f5e9c62.03fd64",
        "type": "ui_timelines_chart",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "group": "b34577b7.7dc8e8",
        "name": "timelines-chart-2",
        "order": 0,
        "label": "timelines-chart-2",
        "width": "15",
        "height": "8",
        "lineColors": [
            {
                "statusColor": "#ff0000",
                "statusValue": "true"
            },
            {
                "statusColor": "#0059ff",
                "statusValue": "false"
            },
            {
                "statusColor": "#ff6f00",
                "statusValue": "ERRROR1"
            },
            {
                "statusColor": "#fd983a",
                "statusValue": "ERRROR2"
            },
            {
                "statusColor": "#fdad77",
                "statusValue": "ERRROR3"
            },
            {
                "statusColor": "#ff00f7",
                "statusValue": "ERRROR4"
            },
            {
                "statusColor": "#e733ff",
                "statusValue": "ERRROR5"
            },
            {
                "statusColor": "#fa70d5",
                "statusValue": "ERRROR6"
            },
            {
                "statusColor": "#f7c0ee",
                "statusValue": "ERRROR7"
            }
        ],
        "xTickFormat": "HH:mm",
        "startDateTime": "",
        "endDateTime": "",
        "maxLineHeight": "60",
        "topMargin": "60",
        "xAxisLabelsFontSize": "12",
        "xAxisLabelslColor": "#c29905",
        "yAxisLabelsFontSize": "14",
        "yAxisLabelslColor": "#b750dc",
        "timeFormat": "%H:%M:%S",
        "resetZoomLabelFontSize": "14",
        "resetZoomLabelColor": "#058f99",
        "enableAnimations": true,
        "enableDateMarker": true,
        "forwardInputMessages": true,
        "x": 1110,
        "y": 320,
        "wires": [
            [
                "4c554da1.775324"
            ]
        ]
    },
    {
        "id": "4c554da1.775324",
        "type": "debug",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 320,
        "wires": []
    },
    {
        "id": "28e6ce38.b125f2",
        "type": "inject",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "4b4b8bc35b733b9d"
            ]
        ]
    },
    {
        "id": "d6480b66.212d38",
        "type": "debug",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 400,
        "wires": []
    },
    {
        "id": "349a939e.2441fc",
        "type": "ui_timelines_chart",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "group": "b34577b7.7dc8e8",
        "name": "timelines-chart-3",
        "order": 0,
        "label": "timelines-chart-3",
        "width": "15",
        "height": "8",
        "lineColors": [
            {
                "statusColor": "#ff0000",
                "statusValue": "error1"
            },
            {
                "statusColor": "#0062ff",
                "statusValue": "error2"
            },
            {
                "statusColor": "#ff9500",
                "statusValue": "error3"
            },
            {
                "statusColor": "#00ff7b",
                "statusValue": "error4"
            }
        ],
        "xTickFormat": "HH:mm",
        "startDateTime": "",
        "endDateTime": "",
        "maxLineHeight": "20",
        "topMargin": "60",
        "xAxisLabelsFontSize": "12",
        "xAxisLabelslColor": "#000000",
        "yAxisLabelsFontSize": "12",
        "yAxisLabelslColor": "#000000",
        "timeFormat": "%Y-%m-%d %-I:%M:%S %p",
        "resetZoomLabelFontSize": "14",
        "resetZoomLabelColor": "#099da5",
        "enableAnimations": false,
        "enableDateMarker": false,
        "forwardInputMessages": false,
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "d6480b66.212d38"
            ]
        ]
    },
    {
        "id": "bff180da7ef4c770",
        "type": "function",
        "z": "299de46f.fed57c",
        "g": "7cd973f172520fec",
        "name": "make chart data",
        "func": "function getRandomData(ordinal = false) {\n\n  const NGROUPS = 3,\n    MAXLINES = 5,\n    MAXSEGMENTS = 10,\n    MAXCATEGORIES = 10,\n    // MINTIME = new Date(2018,1,1);\n    MINTIME = new Date(moment().startOf('day'));\n\n  const nCategories = Math.ceil(Math.random()*MAXCATEGORIES),\n    categoryLabels = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n\n  return [...Array(NGROUPS).keys()].map(i => ({\n    group: 'group' + (i+1),\n    data: getGroupData()\n  }));\n\n  function getGroupData() {\n\n    return [...Array(Math.ceil(Math.random()*MAXLINES)).keys()].map(i => ({\n      label: 'label' + (i+1),\n      data: getSegmentsData()\n    }));\n\n    //\n\n    function getSegmentsData() {\n      const nSegments = Math.ceil(Math.random()*MAXSEGMENTS),\n        segMaxLength = Math.round(((new Date())-MINTIME)/nSegments);\n      let runLength = MINTIME;\n\n      return [...Array(nSegments).keys()].map(i => {\n        const tDivide = [Math.random(), Math.random()].sort(),\n          start = new Date(runLength.getTime() + tDivide[0]*segMaxLength),\n          end = new Date(runLength.getTime() + tDivide[1]*segMaxLength);\n\n        runLength = new Date(runLength.getTime() + segMaxLength);\n\n        return {\n          timeRange: [start, end],\n          val: ordinal ? categoryLabels[Math.ceil(Math.random()*nCategories)] : Math.random()\n          //labelVal: is optional - only displayed in the labels\n        };\n      });\n\n    }\n  }\n}\n\nmsg.payload.dataItems = getRandomData(true);\nmsg.payload.startDateTime = moment().startOf('day');\nmsg.payload.endDateTime = moment().endOf('day');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "8cb4b6dcb483f9fd"
            ]
        ]
    },
    {
        "id": "36a1bb954d1be862",
        "type": "inject",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "bff180da7ef4c770"
            ]
        ]
    },
    {
        "id": "7d8a882c438c1cb9",
        "type": "debug",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "9ca8de59a4d3c560",
        "type": "ui_timelines_chart",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "group": "ead3fc9.832a3",
        "name": "timelines-chart-0",
        "order": 1,
        "label": "timelines-chart-0",
        "width": "30",
        "height": "10",
        "lineColors": [],
        "xTickFormat": "YYYY-MM-DD HH:mm:ss",
        "startDateTime": "",
        "endDateTime": "",
        "maxLineHeight": "1",
        "topMargin": "0",
        "xAxisLabelsFontSize": "0",
        "xAxisLabelslColor": "#000000",
        "yAxisLabelsFontSize": "0",
        "yAxisLabelslColor": "#000000",
        "timeFormat": "",
        "resetZoomLabelFontSize": "0",
        "resetZoomLabelColor": "#000000",
        "enableAnimations": false,
        "enableDateMarker": false,
        "forwardInputMessages": true,
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "7d8a882c438c1cb9"
            ]
        ]
    },
    {
        "id": "ad848f5f31111f27",
        "type": "inject",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "bff180da7ef4c770",
                "c453449a.2a34a8",
                "cec323ebfe42f717",
                "4b4b8bc35b733b9d"
            ]
        ]
    },
    {
        "id": "cec323ebfe42f717",
        "type": "function",
        "z": "299de46f.fed57c",
        "g": "7cd973f172520fec",
        "name": "make chart data",
        "func": "function getRandomData(ordinal = false) {\n\n  const _d = new Date();\n\n  const NGROUPS = 1,\n    MAXLINES = 1,\n    MAXSEGMENTS = 9,\n    MAXCATEGORIES = 9,\n    MINTIME = new Date(_d.getFullYear(), _d.getMonth(), _d.getDate(), 0, 0, 0);\n\n  const nCategories = Math.ceil(Math.random()*MAXCATEGORIES),\n    categoryLabels = ['true','false','ERROR1','ERROR2','ERROR3','ERROR4','ERROR5','ERROR6','ERROR7'];\n\n  return [...Array(NGROUPS).keys()].map(i => ({\n    group: 'group' + (i+1),\n    data: getGroupData()\n  }));\n\n  function getGroupData() {\n\n    return [...Array(Math.ceil(Math.random()*MAXLINES)).keys()].map(i => ({\n      label: 'label' + (i+1),\n      data: getSegmentsData()\n    }));\n\n    //\n\n    function getSegmentsData() {\n      const nSegments = Math.ceil(Math.random()*MAXSEGMENTS),\n        segMaxLength = Math.round(((new Date())-MINTIME)/nSegments);\n      let runLength = MINTIME;\n\n      return [...Array(nSegments).keys()].map(i => {\n        const tDivide = [Math.random(), Math.random()].sort(),\n          start = new Date(runLength.getTime() + tDivide[0]*segMaxLength),\n          end = new Date(runLength.getTime() + tDivide[1]*segMaxLength);\n\n        runLength = new Date(runLength.getTime() + segMaxLength);\n\n        return {\n          timeRange: [start, end],\n          val: ordinal ? categoryLabels[Math.ceil(Math.random()*nCategories)] : Math.random()\n          //labelVal: is optional - only displayed in the labels\n        };\n      });\n\n    }\n  }\n}\n\nmsg.payload = {};\nmsg.payload.dataItems = getRandomData(true);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "7f5e9c62.03fd64"
            ]
        ]
    },
    {
        "id": "4b4b8bc35b733b9d",
        "type": "function",
        "z": "299de46f.fed57c",
        "g": "7cd973f172520fec",
        "name": "make chart data",
        "func": "function getRandomData(ordinal = false) {\n\n  const _d = new Date();\n\n  const NGROUPS = 2,\n    MAXLINES = 2,\n    MAXSEGMENTS = 4,\n    MAXCATEGORIES = 4,\n    MINTIME = new Date(_d.getFullYear(), _d.getMonth(), _d.getDate(), 0, 0, 0);\n\n  const nCategories = Math.ceil(Math.random()*MAXCATEGORIES),\n    categoryLabels = ['error1','error2','error3','error4'];\n\n  return [...Array(NGROUPS).keys()].map(i => ({\n    group: 'machine' + (i+1),\n    data: getGroupData()\n  }));\n\n  function getGroupData() {\n\n    return [...Array(Math.ceil(Math.random()*MAXLINES)).keys()].map(i => ({\n      label: 'label' + (i+1),\n      data: getSegmentsData()\n    }));\n\n    //\n\n    function getSegmentsData() {\n      const nSegments = Math.ceil(Math.random()*MAXSEGMENTS),\n        segMaxLength = Math.round(((new Date())-MINTIME)/nSegments);\n      let runLength = MINTIME;\n\n      return [...Array(nSegments).keys()].map(i => {\n        const tDivide = [Math.random(), Math.random()].sort(),\n          start = new Date(runLength.getTime() + tDivide[0]*segMaxLength),\n          end = new Date(runLength.getTime() + tDivide[1]*segMaxLength);\n\n        runLength = new Date(runLength.getTime() + segMaxLength);\n\n        return {\n          timeRange: [start, end],\n          val: ordinal ? categoryLabels[Math.ceil(Math.random()*nCategories)] : Math.random()\n          //labelVal: is optional - only displayed in the labels\n        };\n      });\n\n    }\n  }\n}\n\nmsg.payload = {};\nmsg.payload.dataItems = getRandomData(true);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 400,
        "wires": [
            [
                "349a939e.2441fc"
            ]
        ]
    },
    {
        "id": "f6fe68bfc979dde5",
        "type": "ui_timelines_chart",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "group": "ead3fc9.832a3",
        "name": "timelines-chart-1",
        "order": 2,
        "label": "timelines-chart-1",
        "width": "0",
        "height": "0",
        "lineColors": [
            {
                "statusColor": "#000010",
                "statusValue": "1"
            },
            {
                "statusColor": "#000020",
                "statusValue": "2"
            },
            {
                "statusColor": "#000030",
                "statusValue": "3"
            },
            {
                "statusColor": "#000040",
                "statusValue": "4"
            },
            {
                "statusColor": "#000050",
                "statusValue": "5"
            },
            {
                "statusColor": "#000060",
                "statusValue": "6"
            },
            {
                "statusColor": "#000070",
                "statusValue": "7"
            },
            {
                "statusColor": "#000080",
                "statusValue": "8"
            },
            {
                "statusColor": "#000090",
                "statusValue": "9"
            },
            {
                "statusColor": "#0000a0",
                "statusValue": "10"
            },
            {
                "statusColor": "#001010",
                "statusValue": "11"
            },
            {
                "statusColor": "#002020",
                "statusValue": "12"
            },
            {
                "statusColor": "#003030",
                "statusValue": "13"
            },
            {
                "statusColor": "#004040",
                "statusValue": "14"
            },
            {
                "statusColor": "#005050",
                "statusValue": "15"
            },
            {
                "statusColor": "#006060",
                "statusValue": "16"
            },
            {
                "statusColor": "#007070",
                "statusValue": "17"
            },
            {
                "statusColor": "#008080",
                "statusValue": "18"
            },
            {
                "statusColor": "#009090",
                "statusValue": "19"
            },
            {
                "statusColor": "#00a0a0",
                "statusValue": "20"
            },
            {
                "statusColor": "#101010",
                "statusValue": "21"
            },
            {
                "statusColor": "#202020",
                "statusValue": "22"
            },
            {
                "statusColor": "#303030",
                "statusValue": "23"
            },
            {
                "statusColor": "#404040",
                "statusValue": "24"
            },
            {
                "statusColor": "#505050",
                "statusValue": "25"
            },
            {
                "statusColor": "#606060",
                "statusValue": "26"
            },
            {
                "statusColor": "#707070",
                "statusValue": "27"
            },
            {
                "statusColor": "#808080",
                "statusValue": "28"
            },
            {
                "statusColor": "#909090",
                "statusValue": "29"
            },
            {
                "statusColor": "#a0a0a0",
                "statusValue": "30"
            }
        ],
        "xTickFormat": "HH:mm",
        "startDateTime": "2020-12-31T00:00",
        "endDateTime": "",
        "maxLineHeight": "60",
        "topMargin": "60",
        "xAxisLabelsFontSize": "16",
        "xAxisLabelslColor": "#000000",
        "yAxisLabelsFontSize": "32",
        "yAxisLabelslColor": "#000000",
        "timeFormat": "%Y-%m-%d %H:%M:%S",
        "resetZoomLabelFontSize": "24",
        "resetZoomLabelColor": "#08a654",
        "enableAnimations": false,
        "enableDateMarker": false,
        "forwardInputMessages": true,
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "b123d4bb.967e08"
            ]
        ]
    },
    {
        "id": "3cb7a90fdbdaa7f5",
        "type": "comment",
        "z": "299de46f.fed57c",
        "g": "491c9326bcc39059",
        "name": "priority: (msg.payload.settings > node property settings)",
        "info": "",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "76596c9d7b35f7fa",
        "type": "comment",
        "z": "299de46f.fed57c",
        "g": "7cd973f172520fec",
        "name": "Create chart data from the database to input to \"Timelines-chart\".",
        "info": "",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "8cb4b6dcb483f9fd",
        "type": "template",
        "z": "299de46f.fed57c",
        "g": "7cd973f172520fec",
        "name": "make msg.payload.settings",
        "field": "payload.settings",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"xAxis\":{\n        \"xTickFormat\": \"HH\",\n        \"startDateTime\": \"{{payload.startDateTime}}\",\n        \"endDateTime\": \"{{payload.endDateTime}}\",\n        \"labelsFontSize\": 16,\n        \"labelsColor\": \"#000000\"\n    },\n    \"yAxis\": {\n        \"labelsFontSize\": 16,\n        \"labelsColor\": \"#aaaaaa\"\n    },\n    \"tooltips\": {\n        \"timeFormat\": \"%H:%M:%S\",\n        \"segmentTooltipContent\": \"\"\n    },\n    \"resetZoom\": {\n        \"labelFontSize\": 32,\n        \"labelColor\": \"#000000\"\n    },\n    \"chart\": {\n        \"topMargin\": 60,\n        \"height\": 20,\n        \"lineColors\": [\n          { \"statusColor\": \"#000000\", \"statusValue\": \"A\" },\n          { \"statusColor\": \"#ffee00\", \"statusValue\": \"B\" },\n          { \"statusColor\": \"#1100ff\", \"statusValue\": \"C\" },\n          { \"statusColor\": \"#00bfff\", \"statusValue\": \"D\" },\n          { \"statusColor\": \"#00ff62\", \"statusValue\": \"E\" },\n          { \"statusColor\": \"#ff0000\", \"statusValue\": \"F\" },\n          { \"statusColor\": \"#ee7272\", \"statusValue\": \"G\" },\n          { \"statusColor\": \"#00bfff\", \"statusValue\": \"H\" },\n          { \"statusColor\": \"#ffa200\", \"statusValue\": \"I\" },\n          { \"statusColor\": \"#8000ff\", \"statusValue\": \"J\" },\n          { \"statusColor\": \"#000000\", \"statusValue\": \"K\" },\n          { \"statusColor\": \"#317881\", \"statusValue\": \"L\" },\n          { \"statusColor\": \"#dc6f6f\", \"statusValue\": \"M\" },\n          { \"statusColor\": \"#007bff\", \"statusValue\": \"N\" },\n          { \"statusColor\": \"#ff941a\", \"statusValue\": \"O\" },\n          { \"statusColor\": \"#fbec23\", \"statusValue\": \"P\" },\n          { \"statusColor\": \"#47bac2\", \"statusValue\": \"R\" },\n          { \"statusColor\": \"#c53030\", \"statusValue\": \"S\" },\n          { \"statusColor\": \"#00ffbf\", \"statusValue\": \"T\" },\n          { \"statusColor\": \"#313bbf\", \"statusValue\": \"U\" },\n          { \"statusColor\": \"#00ff33\", \"statusValue\": \"V\" },\n          { \"statusColor\": \"#47bd8a\", \"statusValue\": \"W\" },\n          { \"statusColor\": \"#efff0a\", \"statusValue\": \"X\" },\n          { \"statusColor\": \"#ff0000\", \"statusValue\": \"Y\" },\n          { \"statusColor\": \"#ff00a2\", \"statusValue\": \"Z\" }\n        ]\n    },\n    \"options\": {\n        \"enableAnimations\": true,\n        \"enableDateMarker\": true\n    }\n}",
        "output": "json",
        "x": 720,
        "y": 160,
        "wires": [
            [
                "9ca8de59a4d3c560"
            ]
        ]
    },
    {
        "id": "b34577b7.7dc8e8",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "35250d78.e38892",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "ead3fc9.832a3",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "35250d78.e38892",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "35250d78.e38892",
        "type": "ui_tab",
        "name": "HOME",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]